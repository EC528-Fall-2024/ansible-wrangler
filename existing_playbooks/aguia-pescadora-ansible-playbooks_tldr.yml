---
# EticaAI/aguia-pescadora-ansible-playbooks/tldr.yml

### 'git clone' falhou? ________________________________________________________
# Você precisa instalar o Git https://git-scm.com

### 'ansible-playbook' falhou (não está instalado)? ____________________________
# Você precisa instalar ele para rodar este arquivo. https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html

### Você tsuru client na sua máquina local? ____________________________________
### Você docker na sua máquina local? __________________________________________
### Você docker-machine na sua máquina local? __________________________________
# As checagens a seguir fazem isso antes mesmo do usuário seguir adiante. Porém
# nos NÃO instalamos na máquina local para o usuário. Como ansible não está
# ignorando erros, o usuário irá ver bem claro a falha e o link direto para
# documentação da instalação

- name: tldr tsuru client? docker? docker-machine?
  hosts: localhost
  tasks:
    - name: tsuru client? https://tsuru-client.readthedocs.io/en/latest/installing.html
      shell: tsuru --version
      ignore_errors: false

    - name: docker? https://docs.docker.com/install/
      shell: docker --version
      ignore_errors: false

    - name: docker-machine? https://docs.docker.com/machine/install-machine/
      shell: docker-machine version
      ignore_errors: false

- name: Hack para permitir o não uso de ansible inventory e forçar -e paas_host=example.com como host alvo
  hosts: localhost
  connection: local
  tasks:
    - name: modo para forçar servidor de destino como target
      add_host:
        name: "{{ paas_host }}"
        groups: paas_host
      changed_when: false

- name: Checagem se você tem acesso via SSH ao paas_host definido (se falhar, você PRECISA que o ansible pelo menos consiga acessar via SSH!)
  hosts: paas_host
  gather_facts: true
  tasks:
    - name: Tem acesso?
      debug:
        msg: "Tesde de acesso ao {{ ansible_host }}"

- name: "Prepara o Host que vai conter o Tsuru (Instala o OpenResty com AutoSSL e o Minio)"
  hosts: paas_host
  remote_user: root
  roles:
    - common
    - minio
    - paas-host

- name: "Usando Tsuru Client desta máquina local, instala o Tsuru server na máquina destino"
  hosts: localhost
  vars:
    paas_master_ip: "{{ paas_ip }}"
    paas_node1_ip: "{{ paas_ip }}"
    paas_cluster_name: "{{ paas_host }}"
  roles:
    - tsuru-installer

