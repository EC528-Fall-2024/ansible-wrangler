--- - hosts: all   tasks:     - name: Create a user       user:         name: john         state: present
--- - hosts: all   tasks:     - name: creates users files       file:         path: /tmp/ansible-{{ item }}         state: touch       loop:         - sammy         - erika         - brian   
--- - hosts: all   become: yes   tasks:     - name: Update apt cache and make sure Vim, Curl and Unzip are installed       apt:         name: "{{ item }}"         update_cache: yes       loop:         - vim         - curl         - unzip  
--- - hosts: all   vars:     - create_user_file: yes     - user: sammy     tasks:     - name: create file for user       file:         path: /home/{{ user }}/myfile         state: touch       when: create_user_file   
--- - hosts: all   vars:     - username: sammy     - home: /home/sammy      tasks:     - name: print variables       debug:         msg: "Username: {{ username }}, Home dir: {{ home }}" 
--- - hosts: all   tasks:     - name: Create a file       file:         path: /tmp/myfile.txt         state: touch
--- - hosts: all   become: yes   vars:     page_title: My Landing Page     page_description: This is my landing page description.   tasks:     - name: Install Nginx       apt:         name: nginx         state: latest      - name: Apply Page Template       template:         src: files/landing-page.html.j2         dest: /var/www/html/index.nginx-debian.html      - name: Allow all access to tcp port 80       ufw:         rule: allow         port: '80'         proto: tcp      
--- - hosts: all   become: yes   tasks:     - name: Update apt cache and make sure Vim is installed       apt:         name: vim         update_cache: yes  
--- - hosts: all   tasks:     - name: Check if a file exists       stat:         path: /tmp/myfile.txt       register: file_info     - name: Print file info       debug:         msg: "File exists: {{ file_info.stat.exists }}"
--- - hosts: all   vars:     - user: sammy   tasks:     - name: Check if file already exists       command: ls /home/{{ user }}/myfile       register: file_exists       ignore_errors: yes      - name: create file for user       file:         path: /home/{{ user }}/myfile         state: touch       when: file_exists is failed      - name: show message if file exists       debug:         msg: The user file already exists.       when: file_exists is succeeded   
--- - hosts: all   become: yes   tasks:     - name: Update apt cache and make sure Vim, Curl and Unzip are installed       apt:         name: "{{ item }}"         update_cache: yes       loop:         - vim         - curl         - unzip  
--- - hosts: all   tasks:     - name: print facts       debug:         msg: "IPv4 address: {{ ansible_default_ipv4.address }}" 
--- - hosts: all   tasks:     - name: Print message       debug:         msg: Hello Ansible World 
--- - hosts: all   become: yes   tasks:           - name: Update apt cache       apt:         update_cache: yes        
--- - hosts: all   become: yes   tasks:     - name: Update apt cache and make sure Vim is installed       apt:         name: vim         update_cache: yes  
--- - hosts: all   become: yes   tasks:     - name: creates sammy's file       become_user: sammy       file:         path: /tmp/ansible_sammy         state: touch      - name: creates erika's file       become_user: erika       file:         path: /tmp/ansible_erika         state: touch 
--- - hosts: all   tasks:     - name: Delete a file       file:         path: /tmp/myfile.txt         state: absent         
--- - hosts: all   tasks:     - name: Add a line to a file       lineinfile:         path: /etc/hosts         line: "127.0.0.1 localhost"
--- - hosts: all   tasks:     - name: Install git       package:         name: git         state: present
--- - hosts: all   tasks:     - name: Print message       debug:         msg: Hello Ansible World
--- - hosts: all   tasks:     - name: Start and enable apache2       service:         name: apache2         state: started         enabled: yes
--- - hosts: all   become: yes   vars:     page_title: My Second Landing Page     page_description: This is my second landing page description.     doc_root: /var/www/mypage    tasks:     - name: Install Nginx       apt:         name: nginx         state: latest      - name: Make sure new doc root exists       file:         path: "{{ doc_root }}"         state: directory         mode: '0755'      - name: Apply Page Template       template:         src: files/landing-page.html.j2         dest: "{{ doc_root }}/index.html"      - name: Replace document root on default Nginx configuration       replace:         path: /etc/nginx/sites-available/default         regexp: '(\s+)root /var/www/html;(\s+.*)?$'         replace: \g<1>root {{ doc_root }};\g<2>       notify: Restart Nginx      - name: Allow all access to tcp port 80       ufw:         rule: allow         port: '80'         proto: tcp    handlers:     - name: Restart Nginx       service:         name: nginx         state: restarted  
